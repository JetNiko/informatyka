-- Create schema
CREATE SCHEMA IF NOT EXISTS szpital;
SET search_path TO szpital;

-- Table: oddzialy

CREATE TABLE oddzialy (
    id_oddzialu SERIAL PRIMARY KEY,
    nazwa VARCHAR(100) NOT NULL,
    typ VARCHAR(100),
    lokalizacja VARCHAR(100),
    liczba_lozek INT CHECK (liczba_lozek >= 0)
);


-- Table: lekarze

CREATE TABLE lekarze (
    id_lekarza SERIAL PRIMARY KEY,
    imie VARCHAR(50) NOT NULL,
    nazwisko VARCHAR(50) NOT NULL,
    specjalizacja VARCHAR(100),
    id_oddzialu INT REFERENCES oddzialy(id_oddzialu) ON DELETE SET NULL,
    telefon VARCHAR(20),
    email VARCHAR(100)
);


-- Table: personel

CREATE TABLE personel (
    id_pracownika SERIAL PRIMARY KEY,
    imie VARCHAR(50) NOT NULL,
    nazwisko VARCHAR(50) NOT NULL,
    stanowisko VARCHAR(100),
    id_oddzialu INT REFERENCES oddzialy(id_oddzialu) ON DELETE SET NULL
);


-- Table: pacjenci

CREATE TABLE pacjenci (
    id_pacjenta SERIAL PRIMARY KEY,
    imie VARCHAR(50) NOT NULL,
    nazwisko VARCHAR(50) NOT NULL,
    pesel CHAR(11) UNIQUE NOT NULL,
    data_urodzenia DATE,
    adres VARCHAR(200),
    telefon VARCHAR(20)
);

-- Table: hospitalizacje

CREATE TABLE hospitalizacje (
    id_hospitalizacji SERIAL PRIMARY KEY,
    id_pacjenta INT NOT NULL REFERENCES pacjenci(id_pacjenta) ON DELETE CASCADE,
    id_oddzialu INT NOT NULL REFERENCES oddzialy(id_oddzialu) ON DELETE SET NULL,
    id_lekarza_przyjmujacego INT REFERENCES lekarze(id_lekarza) ON DELETE SET NULL,
    data_przyjecia DATE NOT NULL,
    data_wypisu DATE,
    diagnoza TEXT
);


-- Table: zabiegi

CREATE TABLE zabiegi (
    id_zabiegu SERIAL PRIMARY KEY,
    id_pacjenta INT NOT NULL REFERENCES pacjenci(id_pacjenta) ON DELETE CASCADE,
    id_lekarza INT REFERENCES lekarze(id_lekarza) ON DELETE SET NULL,
    data_zabiegu DATE NOT NULL,
    typ_zabiegu VARCHAR(100),
    opis TEXT
);